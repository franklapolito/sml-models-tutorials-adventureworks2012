unique_name: Product Dataset
object_type: dataset
label: Product Dataset
connection_id: Connection - AdventureWorks2012
table: dimproduct

columns:
  - name: arabicdescription
    data_type: string
  - name: chinesedescription
    data_type: string
  - name: class
    data_type: string
  - name: classNoNull
    data_type: string
    sql: CASE WHEN class IS NULL OR class = '' THEN 'NA' ELSE class END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN class IS NULL OR class = '' THEN 'NA' ELSE class END
      - dialect: Snowflake
        sql: CASE WHEN "class" IS NULL OR "class"='' THEN 'NA' ELSE "class" END
      - dialect: BigQuery
        sql: CASE WHEN class IS NULL OR class = '' THEN 'NA' ELSE class END  
      - dialect: DatabricksSQL  
        sql: CASE WHEN class IS NULL OR class='' THEN 'NA' ELSE class END   
  - name: classdesc
    data_type: string
    sql: CASE WHEN class IS NULL class = '' THEN 'Not Applicable' WHEN class = 'H' THEN  'High' WHEN class = 'M' THEN 'Medium' WHEN class = 'L' THEN 'Low' END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN class IS NULL class = '' THEN 'Not Applicable' WHEN class = 'H' THEN  'High' WHEN class = 'M' THEN 'Medium' WHEN class = 'L' THEN 'Low' END
      - dialect: Snowflake
        sql: CASE WHEN "class" IS NULL OR "class" = '' THEN 'Not Applicable' WHEN "class" = 'H' THEN  'High' WHEN "class" = 'M' THEN 'Medium' WHEN "class" = 'L' THEN 'Low' END
      - dialect: BigQuery
        sql: CASE WHEN class IS NULL OR class = '' THEN 'Not Applicable' WHEN class = 'H' THEN  'High' WHEN class = 'M' THEN 'Medium' WHEN class = 'L' THEN 'Low' END 
      - dialect: DatabricksSQL  
        sql: CASE WHEN class IS NULL OR class = '' THEN 'Not Applicable' WHEN class = 'H' THEN  'High' WHEN class = 'M' THEN 'Medium' WHEN class = 'L' THEN 'Low' END
  - name: color
    data_type: string
  - name: daystomanufacture
    data_type: "long"
  - name: dealerprice
    data_type: double
  - name: enddate
    data_type: datetime
  - name: enddateNoNull
    data_type: datetime
    sql: CASE WHEN enddate IS NULL THEN cast('1970-01-01 00:00:00' as TIMESTAMP) ELSE enddate END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN enddate IS NULL THEN cast('1970-01-01 00:00:00' as TIMESTAMP) ELSE enddate END
      - dialect: Snowflake
        sql: CASE WHEN "enddate" IS NULL THEN TO_TIMESTAMP('1970-01-01 00:00:00') ELSE "enddate" END
      - dialect: BigQuery
        sql: CASE WHEN enddate IS NULL THEN TIMESTAMP("1970-01-01 00:00:00") ELSE enddate END
      - dialect: DatabricksSQL
        sql: CASE WHEN enddate IS NULL THEN TIMESTAMP("1970-01-01 00:00:00") ELSE enddate END  
  - name: englishdescription
    data_type: string
  - name: englishproductname
    data_type: string
  - name: finishedgoodsflag
    data_type: boolean
  - name: frenchdescription
    data_type: string
  - name: frenchproductname
    data_type: string
  - name: germandescription
    data_type: string
  - name: hebrewdescription
    data_type: string
  - name: japanesedescription
    data_type: string
  - name: largephoto
    data_type: string
  - name: listPriceNoNull
    data_type: double
    sql: CASE WHEN listprice IS NULL THEN 0 ELSE listprice END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN listprice IS NULL THEN 0 ELSE listprice END
      - dialect: Snowflake
        sql: CASE WHEN "listprice" IS NULL THEN 0 ELSE "listprice" END
      - dialect: BigQuery
        sql: CASE WHEN listprice IS NULL THEN 0 ELSE listprice END
      - dialect: DatabricksSQL
        sql: CASE WHEN listprice IS NULL THEN 0 ELSE listprice END  
  - name: listprice
    data_type: double
  - name: modelname
    data_type: string
  - name: modelnameassembly
    data_type: string
    sql: CASE WHEN (modelname IS NULL or trim(modelname) = '') THEN 'Assembly Components' ELSE modelname END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN (modelname IS NULL or trim(modelname) = '') THEN 'Assembly Components' ELSE modelname END
      - dialect: Snowflake
        sql: CASE WHEN ("modelname" IS NULL or trim("modelname") = '') THEN 'Assembly Components' ELSE "modelname" END
      - dialect: BigQuery
        sql: CASE WHEN (modelname IS NULL or trim(modelname) = '') THEN 'Assembly Components' ELSE modelname END
      - dialect: DatabricksSQL
        sql: CASE WHEN (modelname IS NULL or trim(modelname) = '') THEN 'Assembly Components' ELSE modelname END  
  - name: productalternatekey
    data_type: string
  - name: productkey
    data_type: "long"
  - name: productline
    data_type: string
  - name: productlinename
    data_type: string
    sql: CASE trim(productline) WHEN 'M' THEN 'Mountain' WHEN 'R' THEN 'Road' WHEN 'S' THEN 'Accessory' WHEN 'T' THEN 'Touring' ELSE 'Components' END
    dialects:
      - dialect: Postgresql
        sql: CASE trim(productline) WHEN 'M' THEN 'Mountain' WHEN 'R' THEN 'Road' WHEN 'S' THEN 'Accessory' WHEN 'T' THEN 'Touring' ELSE 'Components' END
      - dialect: Snowflake
        sql: CASE trim("productline") WHEN 'M' THEN 'Mountain' WHEN 'R' THEN 'Road' WHEN 'S' THEN 'Accessory' WHEN 'T' THEN 'Touring' ELSE 'Components' END
      - dialect: BigQuery      
        sql: CASE trim(productline) WHEN 'M' THEN 'Mountain' WHEN 'R' THEN 'Road' WHEN 'S' THEN 'Accessory' WHEN 'T' THEN 'Touring' ELSE 'Components' END
      - dialect: DatabricksSQL      
        sql: CASE trim(productline) WHEN 'M' THEN 'Mountain' WHEN 'R' THEN 'Road' WHEN 'S' THEN 'Accessory' WHEN 'T' THEN 'Touring' ELSE 'Components' END  
  - name: productsubcategorykey
    data_type: "long"
  - name: reorderpoint
    data_type: "long"
  - name: safetystocklevel
    data_type: "long"
  - name: simplestartdate 
    data_type: string
    sql: format(CAST(startdate as STRING),'d M, yyyy')
    dialects:
      - dialect: Postgresql
        sql: format(CAST(startdate as STRING),'d M, yyyy')
      - dialect: Snowflake
        sql: DAY("startdate") ||' '|| MONTH("startdate") || ', ' || YEAR("startdate")
      - dialect: BigQuery
        sql: FORMAT_TIMESTAMP('%B %d, %Y', startdate)
      - dialect: DatabricksSQL
        sql: date_format(startdate,'MMMM dd, yyyy')             
  - name: simpleenddate
    data_type: string
    sql: CASE WHEN enddate IS NULL THEN 'Active' ELSE format(CAST(enddate as STRING),'d M, yyyy') END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN enddate IS NULL THEN 'Active' ELSE format(CAST(enddate as STRING),'d M, yyyy') END        
      - dialect: Snowflake
        sql: CASE WHEN "enddate" IS NULL THEN 'Active' ELSE DAY("enddate") ||' '|| MONTH("enddate") || ', ' || YEAR("enddate") END
      - dialect: BigQuery
        sql: CASE WHEN enddate IS NULL THEN 'Active' ELSE FORMAT_TIMESTAMP('%B %d, %Y', enddate)  END
      - dialect: DatabricksSQL
        sql: CASE WHEN enddate IS NULL THEN 'Active' ELSE date_format(enddate, 'MMMM dd, yyyy') END  
  - name: size
    data_type: string
  - name: sizerange
    data_type: string
  - name: sizeunitmeasurecode
    data_type: string
  - name: spanishproductname
    data_type: string
  - name: standardcost
    data_type: double
  - name: startdate
    data_type: datetime
  - name: status
    data_type: string
  - name: statusNoNull
    data_type: string
    sql: CASE WHEN status IS NULL THEN 'NA' ELSE status END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN status IS NULL THEN 'NA' ELSE status END
      - dialect: Snowflake
        sql: CASE WHEN "status" IS NULL THEN 'NA' ELSE "status" END
      - dialect: BigQuery  
        sql: CASE WHEN status IS NULL THEN 'NA' ELSE status END
      - dialect: DatabricksSQL  
        sql: CASE WHEN status IS NULL THEN 'NA' ELSE status END  
  - name: statusdesc
    data_type: string
    sql: CASE WHEN (status IS NULL or trim(status) = '') THEN 'Historical' ELSE status END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN (status IS NULL or trim(status) = '') THEN 'Historical' ELSE status END
      - dialect: Snowflake
        sql: CASE WHEN ("status" IS NULL or trim("status") = '') THEN 'Historical' ELSE "status" END 
      - dialect: BigQuery     
        sql: CASE WHEN (status IS NULL or trim(status) = '') THEN 'Historical' ELSE status END
      - dialect: DatabricksSQL     
        sql: CASE WHEN (status IS NULL or trim(status) = '') THEN 'Historical' ELSE status END     
  - name: style
    data_type: string
  - name: styleNoNull
    data_type: string
    sql: CASE WHEN style IS NULL THEN 'NA' ELSE style END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN style IS NULL THEN 'NA' ELSE style END
      - dialect: Snowflake  
        sql: CASE WHEN "style" IS NULL THEN 'NA' ELSE "style" END
      - dialect: BigQuery  
        sql: CASE WHEN style IS NULL OR style = '' THEN 'NA' ELSE style END
      - dialect: DatabricksSQL  
        sql: CASE WHEN style IS NULL OR style = '' THEN 'NA' ELSE style END  
  - name: styledesc
    data_type: string
    sql: CASE WHEN style IS NULL THEN 'Not Applicable' WHEN style = 'U' THEN 'Unisex' WHEN style = 'M' THEN 'Mens' WHEN style = 'W' THEN 'Womens' END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN style IS NULL THEN 'Not Applicable' WHEN style = 'U' THEN 'Unisex' WHEN style = 'M' THEN 'Mens' WHEN style = 'W' THEN 'Womens' END
      - dialect: Snowflake
        sql: CASE WHEN "style" IS NULL THEN 'Not Applicable'  WHEN "style" = 'U' THEN 'Unisex' WHEN "style" = 'M' THEN 'Mens' WHEN "style" = 'W' THEN 'Womens' END
      - dialect: BigQuery   
        sql: CASE WHEN style IS NULL or style = '' THEN 'Not Applicable' WHEN style = 'U' THEN 'Unisex' WHEN style = 'M' THEN 'Mens' WHEN style = 'W' THEN 'Womens' END
      - dialect: DatabricksSQL   
        sql: CASE WHEN style IS NULL or style = '' THEN 'Not Applicable' WHEN style = 'U' THEN 'Unisex' WHEN style = 'M' THEN 'Mens' WHEN style = 'W' THEN 'Womens' END  
  - name: thaidescription
    data_type: string
  - name: turkishdescription
    data_type: string
  - name: weight
    data_type: double
  - name: weightNoNull
    data_type: double
    sql: CASE WHEN weight IS NULL THEN 0 ELSE weight END
    dialects:
      - dialect: Postgresql
        sql: CASE WHEN weight IS NULL THEN 0 ELSE weight END
      - dialect: Snowflake  
        sql: CASE WHEN "weight" IS NULL THEN 0 ELSE "weight" END
      - dialect: BigQuery  
        sql: CASE WHEN weight IS NULL THEN 0 ELSE weight END
      - dialect: DatabricksSQL  
        sql: CASE WHEN weight IS NULL THEN 0 ELSE weight END  
  - name: weightunitmeasurecode
    data_type: string
